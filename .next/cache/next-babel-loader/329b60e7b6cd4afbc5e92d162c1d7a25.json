{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sagar/Desktop/movie-listing/components/MovieContainer.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport MovieCard from \"./MovieCard\";\nexport default class MovieContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      data: {\n        Response: \"False\"\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.props.data\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"Next Props \", nextProps);\n    if (console.log(_JSON$stringify(nextProps) !== _JSON$stringify(this.state))) return true;else return false;\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    let content = \"\";\n    content = data.Response === \"True\" ? data.Search.map((movie, index) => __jsx(MovieCard, {\n      key: index,\n      movie: movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })) : null;\n    console.log(\"CONTENT \", content);\n    return __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, data.Response === \"True\" ? data.Search.map((movie, index) => __jsx(MovieCard, {\n      key: index,\n      movie: movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/sagar/Desktop/movie-listing/components/MovieContainer.js"],"names":["React","Component","MovieCard","MovieContainer","data","Response","componentDidMount","setState","props","shouldComponentUpdate","nextProps","nextState","console","log","state","render","content","Search","map","movie","index"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC5C;AACNG,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AADA,KAD4C;AAAA;;AAMpDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACZH,MAAAA,IAAI,EAAE,KAAKI,KAAL,CAAWJ;AADL,KAAd;AAGD;;AACDK,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,SAA3B;AACA,QAAIE,OAAO,CAACC,GAAR,CAAY,gBAAeH,SAAf,MAA8B,gBAAe,KAAKI,KAApB,CAA1C,CAAJ,EACE,OAAO,IAAP,CADF,KAEK,OAAO,KAAP;AACN;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAW,KAAKU,KAAtB;AACA,QAAIE,OAAO,GAAG,EAAd;AAEAA,IAAAA,OAAO,GACLZ,IAAI,CAACC,QAAL,KAAkB,MAAlB,GACID,IAAI,CAACa,MAAL,CAAYC,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KACd,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,KAAK,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ,GAII,IALN;AAOAP,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,OAAxB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,IAAI,CAACC,QAAL,KAAkB,MAAlB,GACGD,IAAI,CAACa,MAAL,CAAYC,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KACd,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,KAAK,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADH,GAIG,IALN,CADF;AASD;;AAtCmD","sourcesContent":["import React, { Component } from \"react\";\n\nimport MovieCard from \"./MovieCard\";\n\nexport default class MovieContainer extends Component {\n  state = {\n    data: {\n      Response: \"False\"\n    }\n  };\n  componentDidMount() {\n    this.setState({\n      data: this.props.data\n    });\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"Next Props \", nextProps);\n    if (console.log(JSON.stringify(nextProps) !== JSON.stringify(this.state)))\n      return true;\n    else return false;\n  }\n  render() {\n    const { data } = this.state;\n    let content = \"\";\n\n    content =\n      data.Response === \"True\"\n        ? data.Search.map((movie, index) => (\n            <MovieCard key={index} movie={movie} />\n          ))\n        : null;\n\n    console.log(\"CONTENT \", content);\n    return (\n      <div className=\"row\">\n        {data.Response === \"True\"\n          ? data.Search.map((movie, index) => (\n              <MovieCard key={index} movie={movie} />\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}